{"ast":null,"code":"import _slicedToArray from\"/home/venkatesh/projectBackup/shopio/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import CheckoutSteps from\"../components/CheckoutSteps\";import{useDispatch,useSelector}from\"react-redux\";import{saveShippingAddress}from\"../actions/cartActions\";import{signout}from\"../actions/userActions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ShippingAddressScreen(props){var dispatch=useDispatch();var userSignin=useSelector(function(state){return state.userSignin;});var userInfo=userSignin.userInfo;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;console.log(userInfo);Object.size=function(obj){var size=0,key;for(key in obj){if(obj.hasOwnProperty(key))size++;}return size;};if(Object.size(userInfo)===0){props.history.push(\"/signin\");}var _useState=useState(shippingAddress.fullName),_useState2=_slicedToArray(_useState,2),fullName=_useState2[0],setFullName=_useState2[1];var _useState3=useState(shippingAddress.address),_useState4=_slicedToArray(_useState3,2),address=_useState4[0],setAddress=_useState4[1];var _useState5=useState(shippingAddress.city),_useState6=_slicedToArray(_useState5,2),city=_useState6[0],setCity=_useState6[1];var _useState7=useState(shippingAddress.postalCode),_useState8=_slicedToArray(_useState7,2),postalCode=_useState8[0],setPostalCode=_useState8[1];var _useState9=useState(shippingAddress.country),_useState10=_slicedToArray(_useState9,2),country=_useState10[0],setCountry=_useState10[1];var submitHandler=function submitHandler(e){e.preventDefault();dispatch(saveShippingAddress({fullName:fullName,address:address,city:city,postalCode:postalCode,country:country}));props.history.push(\"/payment\");};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true}),/*#__PURE__*/_jsx(\"div\",{className:\"ShippingForm\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:submitHandler,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h1\",{style:{fontSize:\"25px\",color:\"#000033\"},children:\"Shipping Address\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"fullName\",children:\"Full Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"fullName\",placeholder:\"Enter Full Name\",value:fullName,onChange:function onChange(e){return setFullName(e.target.value);},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"address\",children:\"Address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"address\",placeholder:\"Enter Address\",value:address,onChange:function onChange(e){return setAddress(e.target.value);},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"city\",children:\"City\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"city\",placeholder:\"Enter Full Name\",value:city,onChange:function onChange(e){return setCity(e.target.value);},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postalCode\",children:\"Postal Code\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"postalCode\",placeholder:\"Enter Postal Code\",value:postalCode,onChange:function onChange(e){return setPostalCode(e.target.value);},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"country\",children:\"Country\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"country\",placeholder:\"Enter Country\",value:country,onChange:function onChange(e){return setCountry(e.target.value);},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{}),/*#__PURE__*/_jsx(\"button\",{className:\"primary\",type:\"submit\",children:\"Continue\"})]})]})})]});}export default ShippingAddressScreen;","map":{"version":3,"sources":["/home/venkatesh/projectBackup/shopio/frontend/src/screens/ShippingAddressScreen.js"],"names":["React","useState","CheckoutSteps","useDispatch","useSelector","saveShippingAddress","signout","ShippingAddressScreen","props","dispatch","userSignin","state","userInfo","cart","shippingAddress","console","log","Object","size","obj","key","hasOwnProperty","history","push","fullName","setFullName","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","submitHandler","e","preventDefault","fontSize","color","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { saveShippingAddress } from \"../actions/cartActions\";\nimport { signout } from \"../actions/userActions\";\n\nfunction ShippingAddressScreen(props) {\n  const dispatch = useDispatch();\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n  console.log(userInfo);\n  Object.size = function (obj) {\n    var size = 0,\n      key;\n    for (key in obj) {\n      if (obj.hasOwnProperty(key)) size++;\n    }\n    return size;\n  };\n  if (Object.size(userInfo)===0) {\n    props.history.push(\"/signin\");\n  }\n  const [fullName, setFullName] = useState(shippingAddress.fullName);\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      saveShippingAddress({ fullName, address, city, postalCode, country })\n    );\n    props.history.push(\"/payment\");\n  };\n  return (\n    <>\n      <CheckoutSteps step1 step2></CheckoutSteps>\n\n      <div className=\"ShippingForm\">\n        <form className=\"form\" onSubmit={submitHandler}>\n          <div>\n            <h1 style={{ fontSize: \"25px\", color: \"#000033\" }}>\n              Shipping Address\n            </h1>\n          </div>\n          <div>\n            <label htmlFor=\"fullName\">Full Name</label>\n            <input\n              type=\"text\"\n              id=\"fullName\"\n              placeholder=\"Enter Full Name\"\n              value={fullName}\n              onChange={(e) => setFullName(e.target.value)}\n              required\n            ></input>\n          </div>\n          <div>\n            <label htmlFor=\"address\">Address</label>\n            <input\n              type=\"text\"\n              id=\"address\"\n              placeholder=\"Enter Address\"\n              value={address}\n              onChange={(e) => setAddress(e.target.value)}\n              required\n            ></input>\n          </div>\n          <div>\n            <label htmlFor=\"city\">City</label>\n            <input\n              type=\"text\"\n              id=\"city\"\n              placeholder=\"Enter Full Name\"\n              value={city}\n              onChange={(e) => setCity(e.target.value)}\n              required\n            ></input>\n          </div>\n          <div>\n            <label htmlFor=\"postalCode\">Postal Code</label>\n            <input\n              type=\"text\"\n              id=\"postalCode\"\n              placeholder=\"Enter Postal Code\"\n              value={postalCode}\n              onChange={(e) => setPostalCode(e.target.value)}\n              required\n            ></input>\n          </div>\n          <div>\n            <label htmlFor=\"country\">Country</label>\n            <input\n              type=\"text\"\n              id=\"country\"\n              placeholder=\"Enter Country\"\n              value={country}\n              onChange={(e) => setCountry(e.target.value)}\n              required\n            ></input>\n          </div>\n          <div>\n            <label />\n            <button className=\"primary\" type=\"submit\">\n              Continue\n            </button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default ShippingAddressScreen;\n"]},"metadata":{},"sourceType":"module"}