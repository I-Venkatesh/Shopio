{"ast":null,"code":"var _jsxFileName = \"/home/venkatesh/projectBackup/shopio/frontend/src/screens/PaymentMethodScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { savePaymentMethod } from \"../actions/cartActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PaymentMethodScreen(props) {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n\n  if (!shippingAddress.address) {\n    props.history.push(\"/shipping\");\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    props.history.push(\"/placeorder\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true,\n      step3: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PaymentForm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              fontSize: \"25px\",\n              color: \"#000033\"\n            },\n            children: \"Payment Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"paypal\",\n              value: \"PayPal\",\n              name: \"paymentMethod\",\n              required: true,\n              checked: true,\n              onChange: e => setPaymentMethod(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"paypal\",\n              children: \"PayPal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary\",\n            type: \"submit\",\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PaymentMethodScreen, \"oruhBVyYG+0OKL2wdt/PmwsqqWk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PaymentMethodScreen;\nexport default PaymentMethodScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentMethodScreen\");","map":{"version":3,"sources":["/home/venkatesh/projectBackup/shopio/frontend/src/screens/PaymentMethodScreen.js"],"names":["React","useState","CheckoutSteps","useDispatch","useSelector","savePaymentMethod","PaymentMethodScreen","props","cart","state","shippingAddress","address","history","push","paymentMethod","setPaymentMethod","dispatch","submitHandler","e","preventDefault","fontSize","color","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,iBAAT,QAAkC,wBAAlC;;;AACA,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAClC,QAAMC,IAAI,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAsBF,IAA5B;;AACA,MAAI,CAACE,eAAe,CAACC,OAArB,EAA8B;AAC5BJ,IAAAA,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmB,WAAnB;AACD;;AACD,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,QAAD,CAAlD;AACA,QAAMe,QAAQ,GAAGb,WAAW,EAA5B;;AACA,QAAMc,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,QAAQ,CAACX,iBAAiB,CAACS,aAAD,CAAlB,CAAR;AACAP,IAAAA,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmB,aAAnB;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE,QAAC,aAAD;AAAe,MAAA,KAAK,MAApB;AAAqB,MAAA,KAAK,MAA1B;AAA2B,MAAA,KAAK;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,QAAQ,EAAEI,aAAjC;AAAA,gCACE;AAAA,iCACE;AAAI,YAAA,KAAK,EAAE;AAACG,cAAAA,QAAQ,EAAC,MAAV;AAAkBC,cAAAA,KAAK,EAAE;AAAzB,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,iCACE;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,EAAE,EAAC,QAFL;AAGE,cAAA,KAAK,EAAC,QAHR;AAIE,cAAA,IAAI,EAAC,eAJP;AAKE,cAAA,QAAQ,MALV;AAME,cAAA,OAAO,MANT;AAOE,cAAA,QAAQ,EAAGH,CAAD,IAAOH,gBAAgB,CAACG,CAAC,CAACI,MAAF,CAASC,KAAV;AAPnC;AAAA;AAAA;AAAA;AAAA,oBADF,eAUE;AAAO,cAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAmBE;AAAA,iCACE;AAAQ,YAAA,SAAS,EAAC,SAAlB;AAA4B,YAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GA9CQjB,mB;UACMF,W,EAMID,W;;;KAPVG,mB;AAgDT,eAAeA,mBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { savePaymentMethod } from \"../actions/cartActions\";\nfunction PaymentMethodScreen(props) {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n  if (!shippingAddress.address) {\n    props.history.push(\"/shipping\");\n  }\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\n  const dispatch = useDispatch();\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    props.history.push(\"/placeorder\");\n  };\n\n  return (\n    <div>\n      <CheckoutSteps step1 step2 step3></CheckoutSteps>\n      <div className=\"PaymentForm\">\n        <form className=\"form\" onSubmit={submitHandler}>\n          <div>\n            <h1 style={{fontSize:\"25px\", color: \"#000033\"}}>Payment Method</h1>\n          </div>\n          <div>\n            <div>\n              <input\n                type=\"radio\"\n                id=\"paypal\"\n                value=\"PayPal\"\n                name=\"paymentMethod\"\n                required\n                checked\n                onChange={(e) => setPaymentMethod(e.target.value)}\n              ></input>\n              <label htmlFor=\"paypal\">PayPal</label>\n            </div>\n          </div>\n\n          <div>\n            <button className=\"primary\" type=\"submit\">\n              Continue\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default PaymentMethodScreen;\n"]},"metadata":{},"sourceType":"module"}