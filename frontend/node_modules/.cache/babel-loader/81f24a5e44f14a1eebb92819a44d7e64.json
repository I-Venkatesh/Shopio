{"ast":null,"code":"import _slicedToArray from\"/home/venkatesh/projectBackup/shopio/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import CheckoutSteps from\"../components/CheckoutSteps\";import{useDispatch,useSelector}from\"react-redux\";import{savePaymentMethod}from\"../actions/cartActions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PaymentMethodScreen(props){var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;if(!shippingAddress.address){props.history.push(\"/shipping\");}var _useState=useState(\"PayPal\"),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];var dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();dispatch(savePaymentMethod(paymentMethod));props.history.push(\"/placeorder\");};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsx(\"div\",{className:\"PaymentForm\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:submitHandler,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h1\",{style:{fontSize:\"25px\",color:\"#000033\"},children:\"Payment Method\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",id:\"paypal\",value:\"PayPal\",name:\"paymentMethod\",required:true,checked:true,onChange:function onChange(e){return setPaymentMethod(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"paypal\",children:\"PayPal\"})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"primary\",type:\"submit\",children:\"Continue\"})})]})})]});}export default PaymentMethodScreen;","map":{"version":3,"sources":["/home/venkatesh/projectBackup/shopio/frontend/src/screens/PaymentMethodScreen.js"],"names":["React","useState","CheckoutSteps","useDispatch","useSelector","savePaymentMethod","PaymentMethodScreen","props","cart","state","shippingAddress","address","history","push","paymentMethod","setPaymentMethod","dispatch","submitHandler","e","preventDefault","fontSize","color","target","value"],"mappings":"gIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,iBAAT,KAAkC,wBAAlC,C,wFACA,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAClC,GAAMC,CAAAA,IAAI,CAAGJ,WAAW,CAAC,SAACK,KAAD,QAAWA,CAAAA,KAAK,CAACD,IAAjB,EAAD,CAAxB,CACA,GAAQE,CAAAA,eAAR,CAA4BF,IAA5B,CAAQE,eAAR,CACA,GAAI,CAACA,eAAe,CAACC,OAArB,CAA8B,CAC5BJ,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmB,WAAnB,EACD,CACD,cAA0CZ,QAAQ,CAAC,QAAD,CAAlD,wCAAOa,aAAP,eAAsBC,gBAAtB,eACA,GAAMC,CAAAA,QAAQ,CAAGb,WAAW,EAA5B,CACA,GAAMc,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CAC3BA,CAAC,CAACC,cAAF,GACAH,QAAQ,CAACX,iBAAiB,CAACS,aAAD,CAAlB,CAAR,CACAP,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmB,aAAnB,EACD,CAJD,CAMA,mBACE,oCACE,KAAC,aAAD,EAAe,KAAK,KAApB,CAAqB,KAAK,KAA1B,CAA2B,KAAK,KAAhC,EADF,cAEE,YAAK,SAAS,CAAC,aAAf,uBACE,cAAM,SAAS,CAAC,MAAhB,CAAuB,QAAQ,CAAEI,aAAjC,wBACE,kCACE,WAAI,KAAK,CAAE,CAACG,QAAQ,CAAC,MAAV,CAAkBC,KAAK,CAAE,SAAzB,CAAX,4BADF,EADF,cAIE,kCACE,oCACE,cACE,IAAI,CAAC,OADP,CAEE,EAAE,CAAC,QAFL,CAGE,KAAK,CAAC,QAHR,CAIE,IAAI,CAAC,eAJP,CAKE,QAAQ,KALV,CAME,OAAO,KANT,CAOE,QAAQ,CAAE,kBAACH,CAAD,QAAOH,CAAAA,gBAAgB,CAACG,CAAC,CAACI,MAAF,CAASC,KAAV,CAAvB,EAPZ,EADF,cAUE,cAAO,OAAO,CAAC,QAAf,oBAVF,GADF,EAJF,cAmBE,kCACE,eAAQ,SAAS,CAAC,SAAlB,CAA4B,IAAI,CAAC,QAAjC,sBADF,EAnBF,GADF,EAFF,GADF,CAgCD,CAED,cAAejB,CAAAA,mBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { savePaymentMethod } from \"../actions/cartActions\";\nfunction PaymentMethodScreen(props) {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n  if (!shippingAddress.address) {\n    props.history.push(\"/shipping\");\n  }\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\n  const dispatch = useDispatch();\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    props.history.push(\"/placeorder\");\n  };\n\n  return (\n    <div>\n      <CheckoutSteps step1 step2 step3></CheckoutSteps>\n      <div className=\"PaymentForm\">\n        <form className=\"form\" onSubmit={submitHandler}>\n          <div>\n            <h1 style={{fontSize:\"25px\", color: \"#000033\"}}>Payment Method</h1>\n          </div>\n          <div>\n            <div>\n              <input\n                type=\"radio\"\n                id=\"paypal\"\n                value=\"PayPal\"\n                name=\"paymentMethod\"\n                required\n                checked\n                onChange={(e) => setPaymentMethod(e.target.value)}\n              ></input>\n              <label htmlFor=\"paypal\">PayPal</label>\n            </div>\n          </div>\n\n          <div>\n            <button className=\"primary\" type=\"submit\">\n              Continue\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default PaymentMethodScreen;\n"]},"metadata":{},"sourceType":"module"}